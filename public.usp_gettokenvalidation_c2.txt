-- FUNCTION: public.usp_gettokenvalidation_c2json

-- DROP FUNCTION public.usp_gettokenvalidation_c2json;

CREATE OR REPLACE FUNCTION public.usp_gettokenvalidation_c2(
	input json)
RETURNS json
    LANGUAGE 'plpgsql'
    COST 100.0
    VOLATILE 
AS $function$

DECLARE 
	VUser_ID 	bigint;
	VC2User_ID 	Varchar(100);
	VUserName 	VARCHAR(1000);
	VTRAN		VARCHAR(30);
	VCreated_By	int;
	Vtoken 		VARCHAR(100);
	Vtimeout	smallint;
	Vtimestamp	timestamp;
	VEndtime	timestamp;
	Vmessagetype	smallint;
	VActiondate	timestamp default(current_timestamp at time zone 'utc')	;
Begin

drop table if exists temps;
drop table if exists TEMPTABLE;

create temp table temps(id serial,ivalue json);
create temp table TEMPTABLE (id serial,RoleId bigint);

insert into temps(ivalue)
select input;

	select ivalue->'user'->> 'token' 
	,ivalue->'user'->> 'timestamp' 
	,ivalue->'user'->> 'messagetype' 
	into Vtoken,Vtimestamp,Vmessagetype
	from temps limit 1;

	If not exists(select 1 from kblogindetails where tokenid=Vtoken) then
 	begin
		Return(
			Select row_to_json(a)
			from
			(select 401 "code", 'the token does not exist. please try with valid token' "message")a
		);
	
 	end;
 	elseIf exists(select 1 from kblogindetails where tokenid=Vtoken) then
 	begin

		If exists(select 1 from kblogindetails where tokenid=Vtoken and isactive=1) then
		begin
		
			select user_id, id,user_name into VUser_ID,VC2User_ID  ,VUserName
			from kbusermst_c2 A
			Join kblogindetails b on A.user_id=B.userid
			where A.isactive=1  and b.isactive=1 and B.tokenid=VToken
			limit 1;

			Return(
				Select row_to_json(outs)
				from
				(
					Select Row_to_json(users) "user"
					from
					(
						Select VUser_ID "userid",VC2User_ID "circles_userid",VUserName "username"
						,Vtoken "token", 0 "vid", 'true' "isvalid"
						,400 "code", 'valid' "message"
					)users
				)outs	
			);
		end;	
		else
		begin
			Return(
				Select row_to_json(a)
				from
				(select 404 "code", 'token expired' "message")a
			);
	
		end;
		end if;	

 	end;
 	end if;
	
	exception when others then 
		Return(
			Select row_to_json(a)
			from
			(select 404 "code", 'invalid' "message")a
		);

-- {user:{userid:2345,circles_userid:"ldiemfjkimeimsiejnf",username:"ssfesd",vid:"",token:"ksdafdf"},error:{code:400,message:"valid"},isvalid:true}

	--VTRAN:= (select ivalue->'User'->> 'TransType' from temps limit 1);
	--VCreated_By:= (select ivalue->'User'->> 'LoginId' from temps limit 1);
	

End

$function$;

ALTER FUNCTION public.usp_gettokenvalidation_c2(json)
    OWNER TO postgres;



